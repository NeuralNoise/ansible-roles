---
# installs nginx if not already present

- name: nginx | make sure the python-pycurl is installed
  apt: name=python-pycurl update_cache=yes cache_valid_time=3600

- name: nginx | add the nginx apt key
  apt_key: url=http://nginx.org/keys/nginx_signing.key id=7BD9BF62 state=present

- name: nginx | add the nginx apt repo for debian
  apt_repository: repo="deb http://nginx.org/packages/debian/ {% if ansible_distribution_release != 'NA' %}{{ansible_distribution_release}}{% else %}wheezy{% endif %} nginx" state=present
  when: ansible_distribution == "Debian"
  register: nginx_repository

- name: nginx | add the nginx apt repo for ubuntu
  apt_repository: repo="deb http://nginx.org/packages/ubuntu/ {{ansible_distribution_release}} nginx" state=present update_cache=yes
  when: ansible_distribution == "Ubuntu"

- name: nginx | install the package with a specific version
  apt: name=nginx={{ nginx_version }} state=present
  when: nginx_version != None

- name: nginx | install the package
  apt: name=nginx state=present update_cache=yes
  when: nginx_version == None

- name: nginx | remove default sites from nginx
  file: path=/etc/nginx/conf.d/{{ item }} state=absent
  with_items:
    - default.conf
    - example_ssl.conf

- name: nginx | make sure nginx is running
  service: name=nginx state=started

- name: nginx | make sure that nginx is in the www-data group
  user: name=nginx groups=www-data

- name: nginx | copy grafana config
  template: src=grafana.conf dest=/etc/nginx/conf.d/

- name: nginx | reload nginx
  service: name=nginx state=reloaded
