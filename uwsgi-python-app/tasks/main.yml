---
# Installs and configures a uWSGI python app in a virtualenv

# Make sure that pip and virtualenv are installed.
- apt: name=python-pip state=present update_cache=yes cache_valid_time=3600

# Make sure that virtualenv is installed
- pip: name=virtualenv state=present

# Install system packages
- apt: name={{item}} state=present
  with_items: system_packages

# Make sure that the www directory exists
- file: path=/www/ state=directory mode=750 owner=www-data group=www-data

# Create the user (if necessary)
- user: name={{ appuser }} shell=/bin/bash createhome=yes group=www-data
  when: appuser == "www-data"

# Make sure that the source directory exists
- file: path={{ source_dir }} state=directory mode=770 owner={{ appuser }} group=www-data

# Set the authorized_keys
- authorized_key: user={{ appuser }} key="{{ item }}"
  with_items: authorized_keys

# Install python packages
- pip: name={{ item }} state=present virtualenv={{ virtualenv_dir }} chdir={{ source_dir }}
  with_items: python_packages

# Create virtualenv directory
- file: path={{ virtualenv_dir }} state=directory owner={{ appuser }} group=www-data recurse=yes

# Create a uwsgi configuration file
- template: src=uwsgi.ini.j2 dest=/etc/uwsgi/apps-available/{{ app_name }}.ini owner={{ appuser }} group=www-data

# Add the apps-enabled symlink
- file: path=/etc/uwsgi/apps-enabled/{{ app_name }}.ini src=/etc/uwsgi/apps-available/{{ app_name }}.ini state=link owner={{ appuser }} group=www-data
  when: app_enabled

# Make sure that uWSGI is started
- service: name=uwsgi state=started